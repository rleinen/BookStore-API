@page "/login"

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan

<PageTitle>Login Form</PageTitle>

<div class="card">
    <h3 class="card-title">Login</h3>
    @if (response == false)
    {
        <div class="alert alert-danger">
            <p>Login Failed</p>
        </div>
    }
    <div class="card-body">
        <EditForm Model="model" OnValidSubmit="SubmitLogin">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="mb-3">
                <label for="email">Email Address</label>
                <InputText id="email" class="form-control" @bind-Value="model.Email"/>
                <ValidationMessage For="@(() => model.Email)"/>
            </div>
            <div class="mb-3">
                <label for="password">Password</label>
                <InputText id="password" class="form-control" @bind-Value="model.Password"/>
                <ValidationMessage For="@(() => model.Password)"/>
            </div>
            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel model = new LoginModel();
    private bool response = true;

    private async Task SubmitLogin()
    {
        response = await _authRepo.Login(model);
        if (response)
        {
            _navMan.NavigateTo("/");
        }

    }
}
